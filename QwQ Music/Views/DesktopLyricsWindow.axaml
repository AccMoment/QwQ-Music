<Window
    CanResize="False"
    Focusable="False"
    ShowActivated="False"
    ShowInTaskbar="False"
    SystemDecorations="None"
    Topmost="True"
    Padding="5"
    Width="{Binding LyricConfig.LyricWidowWidth}"
    SizeToContent="Height"
    Background="{Binding LyricConfig.LyricBackground,Converter={StaticResource ToBrushConverter},Mode=TwoWay}"
    WindowStartupLocation="Manual"
    x:Class="QwQ_Music.Views.DesktopLyricsWindow"
    x:DataType="viewModel:DesktopLyricsWindowViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:viewModel="using:QwQ_Music.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:QwQ_Music.Helper.Behaviors"
    xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls.ColorPicker">

    <Window.Resources>
        <converters:ToBrushConverter x:Key="ToBrushConverter" />
    </Window.Resources>
    
    <Panel Width="{Binding LyricConfig.LyricWidth}">
        
        <StackPanel Spacing="{Binding LyricConfig.LyricSpacing}"
                    HorizontalAlignment="{Binding LyricConfig.LyricTextAlignment}"
                    VerticalAlignment="Center"
                    Margin="{Binding LyricConfig.LyricMargin}">

            <Interaction.Behaviors>
                <DataTriggerBehavior Binding="{Binding LyricConfig.LyricIsDoubleLine}" Value="True">
                    <ChangeAvaloniaPropertyAction TargetProperty="{x:Static StackPanel.OrientationProperty}"
                                                  Value="Vertical" />
                </DataTriggerBehavior>
                <DataTriggerBehavior Binding="{Binding LyricConfig.LyricIsDoubleLine}" Value="False">
                    <ChangeAvaloniaPropertyAction TargetProperty="{x:Static StackPanel.OrientationProperty}"
                                                  Value="Horizontal" />
                </DataTriggerBehavior>
            </Interaction.Behaviors>

            <StackPanel.Styles>

                <Style Selector="StackPanel > TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="{Binding LyricConfig.LyricTextAlignment}" />
                    <Setter Property="(behaviors:PlaceholderBehavior.Placeholder)" Value="♪ ♪ ♪" />
                    <Setter Property="TextWrapping" Value="NoWrap" />
                </Style>

            </StackPanel.Styles>

            <TextBlock
                FontSize="{Binding LyricConfig.LyricMainFontSize}"
                Text="{Binding CurrentMainLyric}">

                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="100% 50%" StartPoint="0% 50%">
                        <GradientStop Color="{Binding LyricConfig.LyricMainTopColor,Mode=TwoWay}" Offset="0" />
                        <GradientStop Color="{Binding LyricConfig.LyricMainBottomColor,Mode=TwoWay}" Offset="1" />
                    </LinearGradientBrush>
                </TextBlock.Foreground>

                <TextBlock.Effect>
                    <DropShadowEffect Color="{Binding LyricConfig.LyricMainBorderColor,Mode=TwoWay}" />
                </TextBlock.Effect>

            </TextBlock>

            <TextBlock
                FontSize="{Binding LyricConfig.LyricAltFontSize}"
                Text="{Binding CurrentAltLyric}">

                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="100% 50%" StartPoint="0% 50%">
                        <GradientStop Color="{Binding LyricConfig.LyricAltTopColor,Mode=TwoWay}" Offset="0" />
                        <GradientStop Color="{Binding LyricConfig.LyricAltBottomColor,Mode=TwoWay}" Offset="1" />
                    </LinearGradientBrush>
                </TextBlock.Foreground>

                <TextBlock.Effect>
                    <DropShadowEffect Color="{Binding LyricConfig.LyricAltBorderColor,Mode=TwoWay}" />
                </TextBlock.Effect>

            </TextBlock>

        </StackPanel>
        
    </Panel>
</Window>