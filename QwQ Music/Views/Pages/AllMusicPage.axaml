<UserControl
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    x:Class="QwQ_Music.Views.Pages.AllMusicPage"
    x:DataType="viewModels:AllMusicPageViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:behaviors="clr-namespace:QwQ_Music.Helper.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:u="https://irihi.tech/ursa"
    xmlns:userControls="clr-namespace:QwQ_Music.Views.UserControls"
    xmlns:viewModels="clr-namespace:QwQ_Music.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Grid Margin="10,0" RowDefinitions="Auto,*">

        <Panel Margin="0,5">

            <StackPanel
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Spacing="8">

                <StackPanel.Styles>

                    <Style Selector="u|IconButton">
                        <Setter Property="CornerRadius" Value="8" />
                        <Setter Property="Background" Value="Transparent" />
                    </Style>

                    <Style Selector="PathIcon">
                        <Setter Property="Margin" Value="5" />
                    </Style>

                </StackPanel.Styles>

                <TextBox
                    CornerRadius="8"
                    HorizontalAlignment="Left"
                    Text="{Binding SearchText, Mode=TwoWay}"
                    Watermark="搜索音乐"
                    Width="200" />

                <u:IconButton Command="{Binding OpenFileCommand}" Icon="{StaticResource SemiIconPlus}" />

                <u:IconButton
                    Command="{Binding SelectedCurrentMusicItemCommand}"
                    Icon="{StaticResource SemiIconAlignCenterVertical}"
                    ToolTip.Tip="跳转当前音乐" />

                <u:IconButton Icon="{StaticResource SemiIconMore}" ToolTip.Tip="更多">

                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Spacing="5">
                                <CheckBox Content="类别" Name="MoreColumn1" />
                                <CheckBox Content="大小" Name="MoreColumn2" />
                                <CheckBox Content="备注" Name="MoreColumn3" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>

                </u:IconButton>

            </StackPanel>
        </Panel>

        <DataGrid
            Background="Transparent"
            CanUserReorderColumns="True"
            CanUserResizeColumns="True"
            CanUserSortColumns="True"
            DragDrop.AllowDrop="True"
            Grid.Row="1"
            IsReadOnly="True"
            ItemsSource="{Binding AllMusicItems}"
            Margin="0,0,0,10"
            SelectedItem="{Binding SelectedItem}"
            behaviors:ScrollToItemBehavior.ScrollToItem="{Binding SelectedItem}">

            <DataGrid.Styles>

                <Style Selector="DataGridRow">
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <!--  ReSharper disable once Xaml.PossibleNullReferenceException  -->
                                <MenuItem
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.PlaySpecifiedMusicCommand}"
                                    CommandParameter="{Binding}"
                                    Header="立即播放">
                                    <MenuItem.Icon>
                                        <PathIcon Data="{StaticResource SemiIconPlay}" Margin="2" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <!--  ReSharper disable once Xaml.PossibleNullReferenceException  -->
                                <MenuItem
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.AddToMusicListNextItemCommand}"
                                    CommandParameter="{Binding}"
                                    Header="添加到下一首">
                                    <MenuItem.Icon>
                                        <PathIcon
                                            Data="{StaticResource SemiIconPlus}"
                                            Margin="2"
                                            RenderTransform="rotate(180deg)" />
                                    </MenuItem.Icon>
                                </MenuItem>

                                <MenuItem
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.ClearMusicItemCurrentDurationCommand}"
                                    CommandParameter="{Binding}"
                                    Header="清空播放时长">
                                    <MenuItem.Icon>
                                        <PathIcon Data="{StaticResource ClearEmpty}" Margin="2" />
                                    </MenuItem.Icon>
                                </MenuItem>


                                <MenuItem
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.ShowDialogCommand}"
                                    CommandParameter="{Binding}"
                                    Header="详细信息">
                                    <MenuItem.Icon>
                                        <PathIcon Data="{StaticResource SemiIconArticle}" Margin="2" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                
                                <!--  在文件中打开  -->
                                <MenuItem
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.OpenInExplorerCommand}"
                                    CommandParameter="{Binding}"
                                    Header="在文件中打开">
                                    <MenuItem.Icon>
                                        <PathIcon Data="{StaticResource SemiIconFolder}" Margin="2" />
                                    </MenuItem.Icon>
                                </MenuItem>

                                <!--  删除  -->
                                <MenuItem
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.DeleteMusicItemCommand}"
                                    CommandParameter="{Binding}"
                                    Header="删除音乐">
                                    <MenuItem.Icon>
                                        <PathIcon Data="{StaticResource SemiIconDelete}" Margin="2" />
                                    </MenuItem.Icon>
                                </MenuItem>

                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style Selector="DataGrid /template/ DataGridColumnHeader#PART_TopLeftCornerHeader /template/ Border">
                    <Setter Property="Opacity" Value="0" />
                </Style>

                <Style Selector="DataGridColumnHeadersPresenter &gt; DataGridColumnHeader">
                    <Setter Property="Theme" Value="{StaticResource NoDecorativeThread}" />
                </Style>

                <Style Selector="DataGrid /template/ Rectangle#PART_ColumnHeadersAndRowsSeparator">
                    <Setter Property="Opacity" Value="0" />
                </Style>

                <Style Selector="DataGridRowHeader /template/ Grid">
                    <Setter Property="Opacity" Value="0" />
                </Style>

                <Style Selector="DataGridRow:pointerover /template/ Border#BackgroundBorder">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>

                <Style Selector="DataGridRow:selected /template/ Border#BackgroundBorder">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>

                <Style Selector="DataGridCell:current /template/ Rectangle#CurrencyVisual">
                    <Setter Property="Opacity" Value="0" />
                </Style>

                <Style Selector="DataGridCell:focus /template/ Panel#FocusVisual">
                    <Setter Property="Opacity" Value="0" />
                </Style>

            </DataGrid.Styles>

            <DataGrid.Columns>

                <DataGridTemplateColumn SortMemberPath="Title" Width="1*">

                    <DataGridTemplateColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="歌曲" />
                            <TextBlock
                                Classes="Tertiary"
                                FontSize="12"
                                Text=" / 演唱者"
                                VerticalAlignment="Bottom" />
                        </StackPanel>
                    </DataGridTemplateColumn.Header>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">

                                <!--  ReSharper disable Xaml.PossibleNullReferenceException  -->
                                <userControls:MusicAlbumButton
                                    Command="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.PlaySpecifiedMusicCommand}"
                                    CommandParameter="{Binding}"
                                    CornerRadius="8"
                                    CurrentMusicItem="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.CurrentMusicItem}"
                                    ExternalMouseTouch="{Binding $parent[DataGridRow].IsPointerOver}"
                                    IsPlaying="{Binding $parent[UserControl].((viewModels:AllMusicPageViewModel)DataContext).MusicPlayerViewModel.IsPlaying}">
                                    <!--  ReSharper restore Xaml.PossibleNullReferenceException  -->
                                    <Button.Effect>
                                        <DropShadowEffect
                                            BlurRadius="10"
                                            Color="DarkGray"
                                            OffsetX="0"
                                            OffsetY="0"
                                            Opacity="0.5" />
                                    </Button.Effect>
                                </userControls:MusicAlbumButton>

                                <StackPanel Spacing="5" VerticalAlignment="Center">
                                    <TextBlock FontWeight="Bold" Text="{Binding Title}" />
                                    <TextBlock
                                        Classes="Tertiary"
                                        FontSize="12"
                                        Text="{Binding Artists}" />
                                </StackPanel>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Binding="{Binding Album}"
                    Header="专辑"
                    Width="1*" />

                <!--<DataGridTextColumn Header="类别"
                                    MinWidth="100"
                                    IsVisible="{Binding ElementName=MoreColumn1,Path=IsChecked}"
                                    Binding="{Binding ExtensionsProperty.Genre}" />-->

                <DataGridTemplateColumn Header="时长" MinWidth="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Spacing="5" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Duration, Mode=OneWay, Converter={StaticResource TruncateDecimalConverter}}" />

                                <TextBlock
                                    Classes="Tertiary"
                                    FontSize="12"
                                    Text="{Binding Current, Mode=OneWay, Converter={StaticResource TruncateDecimalConverter}, StringFormat='已播放到 : {0}'}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Binding="{Binding FileSize}"
                    Header="大小"
                    IsVisible="{Binding IsChecked, ElementName=MoreColumn2}"
                    MinWidth="100" />

                <DataGridTextColumn
                    Binding="{Binding Remarks}"
                    Header="备注"
                    IsVisible="{Binding IsChecked, ElementName=MoreColumn3}"
                    MinWidth="100" />


            </DataGrid.Columns>

            <Interaction.Behaviors>

                <RoutedEventTriggerBehavior RoutedEvent="{x:Static DragDrop.DropEvent}">
                    <InvokeCommandAction Command="{Binding DropFilesCommand}" PassEventArgsToCommand="True" />
                </RoutedEventTriggerBehavior>

                <EventTriggerBehavior EventName="DoubleTapped">
                    <InvokeCommandAction Command="{Binding ToggleMusicCommand}" />
                </EventTriggerBehavior>

            </Interaction.Behaviors>

        </DataGrid>

    </Grid>

</UserControl>