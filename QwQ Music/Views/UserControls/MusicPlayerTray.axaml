<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModel="clr-namespace:QwQ_Music.ViewModels"
             x:DataType="viewModel:MusicPlayerTrayViewModel"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:control="clr-namespace:QwQ.Avalonia.Control;assembly=QwQ.Avalonia.Control"
             xmlns:behaviors="clr-namespace:QwQ_Music.Helper.Behaviors"
             mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="125"
             x:Class="QwQ_Music.Views.UserControls.MusicPlayerTray">

    <UserControl.Styles>

        <Style Selector="Image.AlbumCoverRotate">
            <Style.Animations>
                <Animation IterationCount="Infinite" Duration="0:0:15" FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="RotateTransform.Angle" Value="{Binding AlbumCoverRecordAngle}" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="RotateTransform.Angle"
                                Value="{Binding AlbumCoverRecordAngle,
                            Converter={StaticResource CalcConverter},
                            ConverterParameter='@VALUE + 360'}" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

    </UserControl.Styles>

    <Border CornerRadius="25"
            Background="Transparent"
            BoxShadow="0 0 10 0 LightGray"
            Margin="20">

        <Grid ColumnDefinitions="Auto,Auto,*">
            <!-- 专辑按钮 -->
            <Button Classes="None"
                    Background="{x:Null}"
                    Command="{Binding MusicPlayerViewModel.TogglePlaybackCommand}">
                <Border Margin="10"
                        BorderBrush="White"
                        BorderThickness="3"
                        Background="Black"
                        BoxShadow="0 0 10 0 DarkGray"
                        behaviors:DynamicCornerBehavior.IsEnabled="True">

                    <Border ClipToBounds="True" Margin="5">
                        <!-- 专辑封面 Image 控件 -->
                        <Image RenderOptions.BitmapBlendingMode="Source"
                               MaxHeight="60"
                               MaxWidth="60"
                               Source="{Binding MusicPlayerViewModel.CurrentMusicItem.CoverPathProperty,Converter={StaticResource AlbumImageConverter}}"
                               Classes.AlbumCoverRotate="{Binding MusicPlayerViewModel.IsPlaying}">

                            <Image.RenderTransform>
                                <RotateTransform Angle="{Binding AlbumCoverCurrentAngle,Mode=OneWayToSource}" />
                            </Image.RenderTransform>
                            
                        </Image>
                    </Border>

                </Border>
            </Button>

            <!-- 音乐信息 -->
            <StackPanel Width="80" Grid.Column="1" VerticalAlignment="Center" Spacing="5">

                <TextBlock TextTrimming="CharacterEllipsis"
                           Text="{Binding MusicPlayerViewModel.CurrentMusicItem.TitleProperty}"
                           ToolTip.Tip="{Binding RelativeSource={RelativeSource Self},Path=Text}"
                           FontWeight="DemiBold" />
                <TextBlock Classes="Tertiary"
                           Text="{Binding MusicPlayerViewModel.CurrentMusicItem.ArtistsProperty}"
                           TextTrimming="CharacterEllipsis"
                           ToolTip.Tip="{Binding RelativeSource={RelativeSource Self},Path=Text}"
                           FontSize="12" />

            </StackPanel>

            <!-- 播放控制 -->
            <Grid Grid.Column="2"
                  Margin="0,5,0,10"
                  ColumnDefinitions="*,Auto"
                  RowDefinitions="*,Auto">

                <StackPanel Spacing="20"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                    
                    <StackPanel.Styles>
                        <Style Selector="StackPanel > Button">
                            <Setter Property="Padding" Value="0"/>
                        </Style>
                    </StackPanel.Styles>

                    <!-- 上一首 -->
                    <Button Classes="Icon"
                            Command="{Binding  MusicPlayerViewModel.TogglePreviousSongCommand}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True"
                            Foreground="{DynamicResource TextBlockDefaultForeground}">
                        <PathIcon Height="30" Data="{StaticResource PlayIconData}" RenderTransform="rotate(180deg)" />
                    </Button>

                    <!-- 播放/暂停 按钮 -->
                    <Button Name="PlayButton"
                            Classes="None"
                            Command="{Binding MusicPlayerViewModel.TogglePlaybackCommand}">

                        <Panel>
                            <Border Classes.Run="{Binding #PlayButton.IsPointerOver}"
                                    Classes.Reduction="{Binding !#PlayButton.IsPointerOver}"
                                    Background="#FF51C5FF"
                                    Padding="{Binding PlayButtonPadding,Mode=OneWayToSource}"
                                    ClipToBounds="True"
                                    behaviors:DynamicCornerBehavior.IsEnabled="True">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="{Binding PlayButtonAngle,Mode=OneWayToSource}" />
                                </Border.RenderTransform>

                                <Border.Styles>

                                    <Style Selector="Border.Reduction">
                                        <Style.Animations>
                                            <Animation Duration="0:0:1" FillMode="Forward" Easing="QuadraticEaseIn">
                                                <KeyFrame KeySpline="0.3,1.3,1,0.13" Cue="0%">
                                                    <Setter Property="RotateTransform.Angle"
                                                            Value="{Binding PlayButtonAngle}" />
                                                    <Setter Property="Padding" Value="{Binding PlayButtonPadding}" />
                                                </KeyFrame>
                                                <KeyFrame KeySpline="0.3,1.3,1,1.13" Cue="100%">
                                                    <Setter Property="RotateTransform.Angle" Value="0" />
                                                    <Setter Property="Padding" Value="0" />
                                                </KeyFrame>
                                            </Animation>
                                        </Style.Animations>
                                    </Style>

                                    <Style Selector="Border.Run">
                                        <Style.Animations>
                                            <Animation Duration="0:0:1" FillMode="Forward" Easing="QuadraticEaseIn">
                                                <KeyFrame KeySpline="0.3,1.3,1,0.13" Cue="0%">
                                                    <Setter Property="RotateTransform.Angle"
                                                            Value="{Binding PlayButtonAngle}" />
                                                    <Setter Property="Padding" Value="{Binding PlayButtonPadding}" />
                                                </KeyFrame>
                                                <KeyFrame KeySpline="0.3,1.3,1,1.13" Cue="100%">
                                                    <Setter Property="RotateTransform.Angle" Value="180" />
                                                    <Setter Property="Padding" Value="5" />
                                                </KeyFrame>
                                            </Animation>
                                        </Style.Animations>
                                    </Style>

                                </Border.Styles>

                                <Ellipse Margin="3" Fill="#FF7BE0FF">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="-8" Y="8" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>

                            </Border>

                            <control:SwitchControl Height="30"
                                                          Width="30"
                                                          Condition="{Binding MusicPlayerViewModel.IsPlaying}">

                                <control:SwitchControl.TrueContent>
                                    <PathIcon
                                        Foreground="White"
                                        Data="{StaticResource PauseIconData}" />
                                </control:SwitchControl.TrueContent>

                                <control:SwitchControl.FalseContent>
                                    <PathIcon
                                        Foreground="White"
                                        Data="{StaticResource PlayIconData}" />
                                </control:SwitchControl.FalseContent>

                            </control:SwitchControl>

                        </Panel>
                    </Button>

                    <!-- 下一首 -->
                    <Button Classes="Icon"
                            Command="{Binding MusicPlayerViewModel.ToggleNextSongCommand}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True"
                            Foreground="{DynamicResource TextBlockDefaultForeground}">
                        <PathIcon Height="30" Data="{StaticResource PlayIconData}" />
                    </Button>
                    
                    <Button Classes="Icon" Command="{Binding MusicPlayerViewModel.RefreshCurrentMusicItemCommand}"
                                          behaviors:DynamicCornerBehavior.IsEnabled="True"
                                          Foreground="{DynamicResource TextBlockDefaultForeground}">
                        <PathIcon Height="12" Width="12" Margin="5" Data="{StaticResource SemiIconRefresh2}" />
                    </Button>

                </StackPanel>

                <!-- 进度条 -->
                <Slider Grid.Row="1"
                        Grid.Column="0"
                        Margin="20,0"
                        Maximum="{Binding MusicPlayerViewModel.CurrentMusicItem.DurationProperty.TotalSeconds}"
                        Value="{Binding MusicPlayerViewModel.CurrentDurationInSeconds}" />

                <!-- 播放时长 / 总时长 -->
                <StackPanel Margin="0,0,10,0"
                            Grid.Row="1"
                            Grid.Column="1"
                            Orientation="Horizontal">

                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding MusicPlayerViewModel.CurrentDurationInSeconds,Mode=OneWay,Converter={StaticResource SecondsToStringConverter}}"
                               FontSize="13" />
                    

                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding MusicPlayerViewModel.CurrentMusicItem.DurationProperty,Mode=OneWay,Converter={StaticResource TruncateDecimalConverter},StringFormat=' / {0}'}"
                               FontSize="11" />

                    <StackPanel.Styles>
                        <Style Selector="StackPanel > TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="{StaticResource Consolab}" />
                        </Style>
                    </StackPanel.Styles>

                </StackPanel>

                <!-- 操作按钮 -->
                <WrapPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Width="100">
                    
                    <WrapPanel.Resources>
                        <!-- ReSharper disable once Xaml.RedundantResource -->
                        <x:Double x:Key="FlyoutMinWidth">30</x:Double>
                    </WrapPanel.Resources>
                    
                    <WrapPanel.Styles>

                        <Style Selector="WrapPanel > Button">
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Width" Value="20" /> 
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="CornerRadius" Value="5" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                        </Style>

                    </WrapPanel.Styles>

                    <Button Classes="Icon" Command="{Binding NavigationToSoundEffectViewCommand}">
                        
                        <PathIcon Height="13" Width="13" Data="{StaticResource SemiIconSimilarity}" />
                        
                    </Button>
                    
                    <Button ToolTip.VerticalOffset="-10"
                            ToolTip.Placement="Top"
                            Classes="Icon">

                        <Panel>
                            <Border Background="#20c997"
                                    behaviors:DynamicCornerBehavior.IsEnabled="True"
                                    Margin="8,4,2,4"
                                    IsVisible="{Binding !MusicPlayerViewModel.IsMuted}" />
                            <PathIcon Height="14" Width="14" Margin="0,0,2,0" Data="{StaticResource EmptyVolume}" />
                            <Border Background="#ff6b6b"
                                    Width="3"
                                    CornerRadius="10"
                                    Margin="0"
                                    IsVisible="{Binding MusicPlayerViewModel.IsMuted}"
                                    RenderTransform="rotate(120deg)" />
                        </Panel>

                        <Button.Resources>
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <Thickness x:Key="FlyoutPadding">0</Thickness>  
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <x:Double x:Key="FlyoutMinHeight">160</x:Double>
                        </Button.Resources>

                        <Button.Flyout>
                            <Flyout ShowMode="TransientWithDismissOnPointerMoveAway" Placement="Top">

                                <Grid Margin="0,5,0,0" RowDefinitions="Auto,*,Auto">

                                    <TextBlock HorizontalAlignment="Center" Margin="0,0,0,3" FontSize="10"
                                               Text="{Binding MusicPlayerViewModel.VolumePercent}"
                                               FontFamily="{StaticResource VivoSans}" />

                                    <Slider Grid.Row="1" HorizontalAlignment="Center" Orientation="Vertical"
                                            Value="{Binding MusicPlayerViewModel.VolumePercent}" Maximum="100" />

                                    <Button Classes.Silent="{Binding MusicPlayerViewModel.IsMuted}"
                                            Command="{Binding MusicPlayerViewModel.ToggleMuteModeCommand}"
                                            Grid.Row="2"
                                            Margin="5"
                                            Height="20" 
                                            Width="20" 
                                            Padding="0"
                                            Classes="Icon">

                                        <PathIcon Data="{StaticResource Prohibit}" />

                                        <Button.Styles>
                                            <Style Selector="Button.Silent">
                                                <Setter Property="Background" Value="#FFFF4D3C" />
                                                <Setter Property="Foreground" Value="White" />
                                                <Style Selector="^:pointerover /template/ ContentPresenter">
                                                    <Setter Property="Background" Value="#AAFF4D3C" />
                                                </Style>
                                            </Style>
                                        </Button.Styles>

                                        <Interaction.Behaviors>

                                            <EventTriggerBehavior EventName="PointerWheelChanged">
                                                <InvokeCommandAction
                                                    Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                                    PassEventArgsToCommand="True" />
                                            </EventTriggerBehavior>

                                        </Interaction.Behaviors>

                                    </Button>

                                </Grid>
                            </Flyout>
                        </Button.Flyout>

                        <ToolTip.Tip>
                            <Panel>
                                <TextBlock IsVisible="{Binding MusicPlayerViewModel.VolumePercent}" FontSize="12">
                                    <Run Text="当前音量：" />
                                    <Run Text="{Binding MusicPlayerViewModel.VolumePercent}" />
                                    <Run Text="%" />
                                </TextBlock>
                                <TextBlock FontSize="12"
                                           IsVisible="{Binding !MusicPlayerViewModel.VolumePercent}"
                                           Text="静音" />
                            </Panel>
                        </ToolTip.Tip>

                        <Interaction.Behaviors>

                            <EventTriggerBehavior EventName="PointerWheelChanged">
                                <InvokeCommandAction Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                                     PassEventArgsToCommand="True" />
                            </EventTriggerBehavior>

                        </Interaction.Behaviors>

                    </Button>

                    <Button Classes="Icon"
                            Command="{Binding $parent[Window].((viewModel:MainWindowViewModel)DataContext).ShowMusicPlaylistCommand}">
                        <PathIcon Height="12" Width="12" Data="{StaticResource SemiIconDescend2}" />
                    </Button>
                    
                </WrapPanel>
            </Grid>

        </Grid>
    </Border>

</UserControl>